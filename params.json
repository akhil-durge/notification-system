{
  "name": "Notification-system",
  "tagline": "This project contains all modules which are necessary for running a sample notification system.",
  "body": "This project contains all modules which are necessary for running a sample notification system.\r\n\r\nThis section explains how to setup different modules in this Notification system.\r\n\r\n### Pre-requisites: \r\n1. jdk1.8 \r\n2. apache-tomcat-7 \r\n3. MySQL Server 5.6 \r\n4. php5 with mysql package \r\n5. internet connectivity\r\n\r\n### A. Database setup: \r\nAttached zip has a DB schema file 'db/notifier.sql'. Create database 'notifier' and source this schema to MySql server using following command: mysql -u -p notifier < notifier.sql\r\n\r\n### B. Notification REST API setup: \r\n1. Attached zip has a directory 'notification-api/', go to that directory and run following command: mvn clean install -DskipTests \r\n2. Copy generated war to tomcat's 'webapps' directory using command: cp notif-system-service/target/notification-api.war /webapps/ \r\n3. Copy properties file to tomcat's 'lib' using command: cp app-resources/notif-system.properties /lib/ \r\n4. Open /lib/notif-system.properties and set MySql credentials and connection URL. \r\n5. Go to /bin directory and run following command: sudo sh catalina.sh start \r\n6. Run below command to open log file in tail mode. You can check all the logs here when using notificaion-api: tailf /var/log/notification-service.log\r\n\r\n### C. UI setup: \r\n1. Attached zip has a directory 'ui/'. Copy all contents of this directory to /webapps/ROOT/ using command: cp -rf ui/* /webapps/ROOT/ \r\n2. Open this link in browser 'http://localhost:8080/notif.html'. Change port as per your tomcat setup.\r\n\r\nTill this point you should be able to see the UI with clickable bell and notification-count. Now follow below part to generate and push notifications to DB.\r\n\r\n### D. Notification Generator setup: \r\n1. Attached zip has a directory 'notification-generator/', go to that directory. \r\n2. Open file 'config/db.ini' and set DB credentials and server details here. \r\n3. Run 'NotifGenerator.php' using command: php NotifGenerator.php\r\n\r\nThis script generates a notification using pre-defined set of notifications in random order for a pre-defined user, from a pre-defined user and pushes it to DB. The pre-defined notifications, to-user, from-user can found at location 'constants/Constants.php'.\r\n\r\nThe UI then fetches data from DB at regular interval and you can observe near-to-real-time notifications on UI.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}